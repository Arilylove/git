<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd ">

	<!-- 校验错误信息配置文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>en_US</value>
			</list>
		</property>
		<property name="fileEncodings" value="utf-8" />
		<property name="cacheSeconds" value="12000000" />
	</bean>
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 如果不指定则默认使用classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<!-- 启动validator -->
	<!-- conversionService 輸入字符串轉換 jsonMessageConverter 輸出轉換 -->
	<mvc:annotation-driven validator="validator"
		conversion-service="conversionService">
		<mvc:message-converters>
			<ref bean="jsonMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- conversionService -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 转换器 -->
		<property name="converters">
			<list>
				<bean class="com.laison.common.converter.CustomDateConverter" />
				<bean class="com.laison.common.converter.StringTrimConverter" />
			</list>
		</property>
	</bean>
	<bean
		class="org.springframework.web.servlet.handler.HandlerExceptionResolverComposite">
		<property name="order" value="0" />
		<property name="exceptionResolvers">
			<list>
				<bean class="com.laison.common.exception.CustomExceptionResolver"></bean>
			</list>
		</property>
	</bean>
	<!--com.laison.common.converter.MyJsonConverter -->
	<!-- org.springframework.http.converter.json.MappingJackson2HttpMessageConverter -->
	<bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value><!-- 避免IE出现下载JSON文件的情况 -->
			</list>
		</property>
		<property name="objectMapper">
			<bean class="com.laison.common.converter.I18NObjectMapper">
				<property name="dateFormat">
					<bean class="java.text.SimpleDateFormat">
						<constructor-arg>
							<value>yyyy-MM-dd HH:mm:ss</value>
						</constructor-arg>
					</bean>
				</property>
			</bean>

		</property>
	</bean>
	<!-- <bean id="mappingJackson2HttpMessageConverterFactory" class="com.laison.common.converter.MappingJackson2HttpMessageConverterFactory" 
		/> -->
	<!-- 包扫描器，扫描@Controller注解 -->
	<context:component-scan base-package="com.laison" />

	<!-- 开启aop，对类代理 SysLogAspect用注解方式配置 这里可以注释掉 -->
	<aop:config proxy-target-class="true">
		<aop:aspect ref="shiroAop" >
			
		</aop:aspect>
		<aop:aspect ref="logAopBean" order="1">
			<aop:pointcut id="pointCut"
				expression="@annotation(com.laison.common.annotation.SysLogAnnotation)" />
			<aop:before pointcut-ref="pointCut" method="before" />
			<aop:after pointcut-ref="pointCut" method="after" />
		</aop:aspect>
	</aop:config>

	<!-- 开启shiro注解支持 -->
	 <bean id="shiroAop" class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"> 
		<property name="securityManager" ref="securityManager" /> 
		<property name="order" value="0" /> 
	</bean> 

	<bean id="logAopBean" class="com.laison.common.log.SysLogAspect">
		
	</bean>

	<!-- 配置视图解析器 要求将jstl的包加到classpath -->
	<!-- ViewResolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp"/>
	</bean>


	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为5MB -->
		<property name="maxUploadSize">
			<value>5242880</value>
		</property>
	</bean>
	<!-- 定义统一异常处理器 -->
	<bean class="com.laison.common.exception.CustomExceptionResolver"></bean>

	<!-- 转换器 -->
	<!-- <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"> 
		<property name="converters"> <list> <bean class="cn.itcast.ssm.controller.converter.CustomDateConverter" 
		/> <bean class="cn.itcast.ssm.controller.converter.StringTrimConverter" /> 
		</list> </property> </bean> -->


	<!-- 校验器 -->
	<!-- <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"> 
		校验器 <property name="providerClass" value="org.hibernate.validator.HibernateValidator" 
		/> 指定校验使用的资源文件，如果不指定则默认使用classpath下的ValidationMessages.properties <property 
		name="validationMessageSource" ref="messageSource" /> </bean> -->
	<!-- 校验错误信息配置文件 -->
	<!-- <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"> 
		资源文件名 <property name="basenames"> <list> <value>classpath:CustomValidationMessages</value> 
		</list> </property> 资源文件编码格式 <property name="fileEncodings" value="utf-8" 
		/> 对资源文件内容缓存时间，单位秒 <property name="cacheSeconds" value="120" /> </bean> -->


</beans>