<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.laison.mapper.sysuser.SysUserMapper" >
  <resultMap id="BaseResultMap" type="com.laison.entity.sysuser.SysUser" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="job_no" property="jobNo" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="company_code" property="companyCode" jdbcType="BIGINT" />
    <result column="station_code" property="stationCode" jdbcType="BIGINT" />
    <result column="user_type" property="userType" jdbcType="INTEGER" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="credit_limit" property="creditLimit" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, login_name, password, job_no, nick_name, email, phone, mobile, company_code, 
    station_code, user_type, photo, create_by, create_date, remarks, state, credit_limit
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.laison.entity.sysuser.SysUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.laison.entity.sysuser.SysUserExample" >
    delete from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.laison.entity.sysuser.SysUser" >
    insert into sys_user (id, login_name, password, 
      job_no, nick_name, email, 
      phone, mobile, company_code, 
      station_code, user_type, photo, 
      create_by, create_date, remarks, 
      state, credit_limit)
    values (#{id,jdbcType=BIGINT}, #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{jobNo,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{companyCode,jdbcType=BIGINT}, 
      #{stationCode,jdbcType=BIGINT}, #{userType,jdbcType=INTEGER}, #{photo,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{creditLimit,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.laison.entity.sysuser.SysUser" >
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="jobNo != null" >
        job_no,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="companyCode != null" >
        company_code,
      </if>
      <if test="stationCode != null" >
        station_code,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="photo != null" >
        photo,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="creditLimit != null" >
        credit_limit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="jobNo != null" >
        #{jobNo,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null" >
        #{companyCode,jdbcType=BIGINT},
      </if>
      <if test="stationCode != null" >
        #{stationCode,jdbcType=BIGINT},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="creditLimit != null" >
        #{creditLimit,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.laison.entity.sysuser.SysUserExample" resultType="java.lang.Integer" >
    select count(*) from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <!-- 查询用户的所有菜单ID -->
	<select id="queryAllMenuId" resultType="String">
		select distinct rm.menu_id from sys_user_role ur
		LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
		where ur.user_id = #{userId}
	</select>
	<!-- 查询用户的所有权限 -->
	<select id="queryAllPerms" resultType="String">
		SELECT perms FROM sys_menu where id in (select distinct rm.menu_id from
		sys_user_role ur LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
		where ur.user_id = #{userId})
	</select>
	<!--查询用户  包括rolename 和stationName  -->
	<select id="list" resultType="com.laison.entity.sysuser.SysUser">
		SELECT
		sys_user.id id,
		sys_user.login_name loginName,
		sys_user.`password` password,
		sys_user.job_no jobNo,
		sys_user.nick_name nickName,
		sys_user.email email,
		sys_user.phone phone,
		sys_user.mobile mobile,
		sys_user.company_code companyCode,
		sys_user.station_code stationCode,
		sys_user.user_type userType,
		sys_user.photo photo,
		sys_user.create_by createBy,
		sys_user.create_date createDate,
		sys_user.remarks remarks,
		sys_user.state state,
		sys_user.credit_limit creditLimit,
		sys_role.`name` roleName,
		station_info.station_name stationName
		FROM (sys_user ,sys_role)
		INNER JOIN sys_user_role ON (sys_user_role.user_id = sys_user.id AND sys_user_role.role_id = sys_role.id)
		Left JOIN station_info ON (sys_user.station_code = station_info.station_code) 
	</select>
	<select id="countList" resultType="java.lang.Long">
		SELECT
		count(0)
		FROM (sys_user ,sys_role)
		INNER JOIN sys_user_role ON (sys_user_role.user_id = sys_user.id AND sys_user_role.role_id = sys_role.id)
		Left JOIN station_info ON (sys_user.station_code = station_info.station_code) 
	</select>
	<!-- 查询用户的所有权限 -->
	<select id="queryUserRole" resultType="com.laison.entity.sysrole.SysRole">
		SELECT id ,name ,role_type roleType,state,create_by creatBy,create_date creatDate, remarks from sys_role where id in ( SELECT role_id from sys_user_role where user_id = #{userId})
	</select>
	
	<update id="resetPassword" parameterType="map" >
		update sys_user set password = #{password,jdbcType=VARCHAR} where id=#{id,jdbcType=BIGINT}
	</update>
	<update id="changeState" parameterType="map" >
		update sys_user set state = #{state} where id=#{id}
	</update>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.loginName != null" >
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.jobNo != null" >
        job_no = #{record.jobNo,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null" >
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.companyCode != null" >
        company_code = #{record.companyCode,jdbcType=BIGINT},
      </if>
      <if test="record.stationCode != null" >
        station_code = #{record.stationCode,jdbcType=BIGINT},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.photo != null" >
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.creditLimit != null" >
        credit_limit = #{record.creditLimit,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_user
    set id = #{record.id,jdbcType=BIGINT},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      job_no = #{record.jobNo,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      company_code = #{record.companyCode,jdbcType=BIGINT},
      station_code = #{record.stationCode,jdbcType=BIGINT},
      user_type = #{record.userType,jdbcType=INTEGER},
      photo = #{record.photo,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      credit_limit = #{record.creditLimit,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.laison.entity.sysuser.SysUser" >
    update sys_user
    <set >
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="jobNo != null" >
        job_no = #{jobNo,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null" >
        company_code = #{companyCode,jdbcType=BIGINT},
      </if>
      <if test="stationCode != null" >
        station_code = #{stationCode,jdbcType=BIGINT},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="creditLimit != null" >
        credit_limit = #{creditLimit,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.laison.entity.sysuser.SysUser" >
    update sys_user
    set login_name = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      job_no = #{jobNo,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      company_code = #{companyCode,jdbcType=BIGINT},
      station_code = #{stationCode,jdbcType=BIGINT},
      user_type = #{userType,jdbcType=INTEGER},
      photo = #{photo,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      credit_limit = #{creditLimit,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>