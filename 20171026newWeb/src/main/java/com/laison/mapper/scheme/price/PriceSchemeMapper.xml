<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.laison.mapper.scheme.price.PriceSchemeMapper" >
  <resultMap id="BaseResultMap" type="com.laison.entity.scheme.price.PriceScheme" >
    <id column="price_scheme_code" property="priceSchemeCode" jdbcType="BIGINT" />
    <result column="price_scheme_name" property="priceSchemeName" jdbcType="VARCHAR" />
    <result column="enable_min_consumed_flag" property="enableMinConsumedFlag" jdbcType="BIT" />
    <result column="mouth_min_consumed_quantity" property="mouthMinConsumedQuantity" jdbcType="DECIMAL" />
    <result column="mouth_min_consumed_amount" property="mouthMinConsumedAmount" jdbcType="DECIMAL" />
    <result column="section_mode" property="sectionMode" jdbcType="INTEGER" />
    <result column="enable_vat_flag" property="enableVatFlag" jdbcType="BIT" />
    <result column="vat" property="vat" jdbcType="DECIMAL" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <collection column="price_scheme_code" property="priceSchemeDetails" ofType="com.laison.entity.scheme.price.detail.PriceSchemeDetail" javaType="java.util.ArrayList" select="selectPriceSchemeDetails"/>
  </resultMap>
  <select id="selectPriceSchemeDetails" resultMap="com.laison.mapper.scheme.price.detail.PriceSchemeDetailMapper.BaseResultMap" parameterType="long">
        SELECT * from price_scheme_detail where price_scheme_code=#{_parameter} ORDER BY step_index ASC
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    price_scheme_code, price_scheme_name, enable_min_consumed_flag, mouth_min_consumed_quantity, 
    mouth_min_consumed_amount, section_mode, enable_vat_flag, vat, create_date, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.laison.entity.scheme.price.PriceSchemeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from price_scheme
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from price_scheme
    where price_scheme_code = #{priceSchemeCode,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from price_scheme
    where price_scheme_code = #{priceSchemeCode,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.laison.entity.scheme.price.PriceSchemeExample" >
    delete from price_scheme
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.laison.entity.scheme.price.PriceScheme" >
    insert into price_scheme (price_scheme_code, price_scheme_name, 
      enable_min_consumed_flag, mouth_min_consumed_quantity, 
      mouth_min_consumed_amount, section_mode, enable_vat_flag, 
      vat, create_date, state
      )
    values (#{priceSchemeCode,jdbcType=BIGINT}, #{priceSchemeName,jdbcType=VARCHAR}, 
      #{enableMinConsumedFlag,jdbcType=BIT}, #{mouthMinConsumedQuantity,jdbcType=DECIMAL}, 
      #{mouthMinConsumedAmount,jdbcType=DECIMAL}, #{sectionMode,jdbcType=INTEGER}, #{enableVatFlag,jdbcType=BIT}, 
      #{vat,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{state,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.laison.entity.scheme.price.PriceScheme" >
    insert into price_scheme
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="priceSchemeCode != null" >
        price_scheme_code,
      </if>
      <if test="priceSchemeName != null" >
        price_scheme_name,
      </if>
      <if test="enableMinConsumedFlag != null" >
        enable_min_consumed_flag,
      </if>
      <if test="mouthMinConsumedQuantity != null" >
        mouth_min_consumed_quantity,
      </if>
      <if test="mouthMinConsumedAmount != null" >
        mouth_min_consumed_amount,
      </if>
      <if test="sectionMode != null" >
        section_mode,
      </if>
      <if test="enableVatFlag != null" >
        enable_vat_flag,
      </if>
      <if test="vat != null" >
        vat,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="priceSchemeCode != null" >
        #{priceSchemeCode,jdbcType=BIGINT},
      </if>
      <if test="priceSchemeName != null" >
        #{priceSchemeName,jdbcType=VARCHAR},
      </if>
      <if test="enableMinConsumedFlag != null" >
        #{enableMinConsumedFlag,jdbcType=BIT},
      </if>
      <if test="mouthMinConsumedQuantity != null" >
        #{mouthMinConsumedQuantity,jdbcType=DECIMAL},
      </if>
      <if test="mouthMinConsumedAmount != null" >
        #{mouthMinConsumedAmount,jdbcType=DECIMAL},
      </if>
      <if test="sectionMode != null" >
        #{sectionMode,jdbcType=INTEGER},
      </if>
      <if test="enableVatFlag != null" >
        #{enableVatFlag,jdbcType=BIT},
      </if>
      <if test="vat != null" >
        #{vat,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.laison.entity.scheme.price.PriceSchemeExample" resultType="java.lang.Integer" >
    select count(*) from price_scheme
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update price_scheme
    <set >
      <if test="record.priceSchemeCode != null" >
        price_scheme_code = #{record.priceSchemeCode,jdbcType=BIGINT},
      </if>
      <if test="record.priceSchemeName != null" >
        price_scheme_name = #{record.priceSchemeName,jdbcType=VARCHAR},
      </if>
      <if test="record.enableMinConsumedFlag != null" >
        enable_min_consumed_flag = #{record.enableMinConsumedFlag,jdbcType=BIT},
      </if>
      <if test="record.mouthMinConsumedQuantity != null" >
        mouth_min_consumed_quantity = #{record.mouthMinConsumedQuantity,jdbcType=DECIMAL},
      </if>
      <if test="record.mouthMinConsumedAmount != null" >
        mouth_min_consumed_amount = #{record.mouthMinConsumedAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.sectionMode != null" >
        section_mode = #{record.sectionMode,jdbcType=INTEGER},
      </if>
      <if test="record.enableVatFlag != null" >
        enable_vat_flag = #{record.enableVatFlag,jdbcType=BIT},
      </if>
      <if test="record.vat != null" >
        vat = #{record.vat,jdbcType=DECIMAL},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update price_scheme
    set price_scheme_code = #{record.priceSchemeCode,jdbcType=BIGINT},
      price_scheme_name = #{record.priceSchemeName,jdbcType=VARCHAR},
      enable_min_consumed_flag = #{record.enableMinConsumedFlag,jdbcType=BIT},
      mouth_min_consumed_quantity = #{record.mouthMinConsumedQuantity,jdbcType=DECIMAL},
      mouth_min_consumed_amount = #{record.mouthMinConsumedAmount,jdbcType=DECIMAL},
      section_mode = #{record.sectionMode,jdbcType=INTEGER},
      enable_vat_flag = #{record.enableVatFlag,jdbcType=BIT},
      vat = #{record.vat,jdbcType=DECIMAL},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.laison.entity.scheme.price.PriceScheme" >
    update price_scheme
    <set >
      <if test="priceSchemeName != null" >
        price_scheme_name = #{priceSchemeName,jdbcType=VARCHAR},
      </if>
      <if test="enableMinConsumedFlag != null" >
        enable_min_consumed_flag = #{enableMinConsumedFlag,jdbcType=BIT},
      </if>
      <if test="mouthMinConsumedQuantity != null" >
        mouth_min_consumed_quantity = #{mouthMinConsumedQuantity,jdbcType=DECIMAL},
      </if>
      <if test="mouthMinConsumedAmount != null" >
        mouth_min_consumed_amount = #{mouthMinConsumedAmount,jdbcType=DECIMAL},
      </if>
      <if test="sectionMode != null" >
        section_mode = #{sectionMode,jdbcType=INTEGER},
      </if>
      <if test="enableVatFlag != null" >
        enable_vat_flag = #{enableVatFlag,jdbcType=BIT},
      </if>
      <if test="vat != null" >
        vat = #{vat,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where price_scheme_code = #{priceSchemeCode,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.laison.entity.scheme.price.PriceScheme" >
    update price_scheme
    set price_scheme_name = #{priceSchemeName,jdbcType=VARCHAR},
      enable_min_consumed_flag = #{enableMinConsumedFlag,jdbcType=BIT},
      mouth_min_consumed_quantity = #{mouthMinConsumedQuantity,jdbcType=DECIMAL},
      mouth_min_consumed_amount = #{mouthMinConsumedAmount,jdbcType=DECIMAL},
      section_mode = #{sectionMode,jdbcType=INTEGER},
      enable_vat_flag = #{enableVatFlag,jdbcType=BIT},
      vat = #{vat,jdbcType=DECIMAL},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=VARCHAR}
    where price_scheme_code = #{priceSchemeCode,jdbcType=BIGINT}
  </update>
</mapper>